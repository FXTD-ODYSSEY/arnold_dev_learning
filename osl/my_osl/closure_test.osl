shader Checker
(
    float base_weight = 0.8,
    float light_weight = 0,
    color light_color = color(1,0,0),
    // float weight = 0.8,
    // vector light_dir = I,
    output closure color Out = 0
)
{
    // closure color black = 0;
    // closure color white = 1;
    // closure color result = 0;
    // if (diffuse(N) == black){
    //     result = color(1,0,0)
    // }else{
    //     result = color(0,1,0)
    // }
    // normal Nf = faceforward(N, -I);
    color camN = transform("camera", N);
    Out = diffuse(N) * base_weight + background() * light_weight * light_color;
}



shader MAtoon(
    color Shading = 1,
    color Rim = 0.5,
    float Angle = 50,
    output closure color Color = 0)
{
    float angle = cos(radians(Angle));
    if(abs(dot(-I,N)) > angle) 
        Color = diffuse(N) * Shading;
    else
        Color = emission() * Rim;
}

