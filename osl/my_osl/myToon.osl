// shader MAtoon(
//     color Shading = 1,
//     color Rim = 0,
//     float Angle = 50,
//     output color Color = 0)
// {
//     float angle = cos(radians(Angle));
//     if(abs(dot(-I,N)) > angle) 
// 		Color = Shading;
// 	else
// 		Color = Rim;
// }

/*
 * FLToon.osl by flokkievids (c)2012
 * from https://github.com/sambler/osl-shaders
 *
 * original script from - http://blenderartists.org/forum/showthread.php?270332-OSL-Goodness/page12
 *
 */


shader bi_toon_shader(
        float Size = .1,
        float Smooth = 0.8,
        float Intensity = 0.7,
        color outColor = color(0.5),
        color inColor = color(0),
        output closure color Toon = color(0)
)
{
    float t = clamp(Intensity, 0.0, 1.0);
    point camera_pos = point("camera", 0, 0, 0);
    float ang;
    ang = acos(dot(N,-I));
    // ang = acos(dot(normalize(camera_pos - P), N));

    color out;
    if (ang < Size)
        out = outColor;
    else if (ang >= (Size+Smooth))
        out = inColor;
    else
        out = outColor*(1.0 - ((ang - Size)/Smooth));
    Toon = diffuse(N) * out * Intensity;
}

